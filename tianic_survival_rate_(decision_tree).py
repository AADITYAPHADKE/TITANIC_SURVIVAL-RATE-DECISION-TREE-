# -*- coding: utf-8 -*-
"""TIANIC SURVIVAL RATE (DECISION TREE)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13qxASE3sd5Rco6d3y_BGR50RT-CBlaFV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

tits = pd.read_csv("/content/titanic.csv")
tits.head()

input = tits.drop(['Name','PassengerId','SibSp','Parch','Ticket','Cabin','Embarked'],axis = 'columns')
input

input['Age'] = np.ceil(input['Age'])
#input['Age'] = np.ceil(input[''])
input

def age_group_mapping(age):
  if 1<= age <= 5 :
    return 'a'
  elif 6<= age <=10:
    return 'b'
  elif 11<= age <=15:
    return 'c'
  elif 16<= age <= 19:
    return 'd'
  elif 20<= age <= 30:
    return 'e'
  elif 31<= age <= 40:
    return 'f'
  elif 41<= age <=55:
    return 'g'
  elif 56<=age <= 70:
    return 'h'
  elif 70<= age :
    return 'i'
  else :
    return 'zz'



# Apply the age_group_mapping function to the 'Age' column
input['Age Group'] = input['Age'].apply(age_group_mapping)

print(input)



from google.colab import drive
drive.mount('/content/drive')

inputt = input.drop('Age', axis = 'columns')
inputt

target = input['Survived']
target

from sklearn.preprocessing import LabelEncoder

le_pcclass = LabelEncoder()
le_gen = LabelEncoder()
le_age = LabelEncoder()
le_fare = LabelEncoder()

inputt['pcclass'] = le_pcclass.fit_transform(input['Pclass'])
inputt['gensz'] = le_gen.fit_transform(input['Sex'])
inputt['age'] = le_age.fit_transform(input['Age'])
inputt['fare'] = le_fare.fit_transform(input['Fare'])

inputt

n_input = inputt.drop(['Pclass','Sex','Age Group','Fare','Survived'],axis = 'columns')
n_input



from sklearn import tree
model = tree.DecisionTreeClassifier()

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(n_input,target,test_size = 0.25)

test1 = X_test.head()
test1

model.fit(n_input,target)

model.score(n_input,target)

model.predict(test1)

